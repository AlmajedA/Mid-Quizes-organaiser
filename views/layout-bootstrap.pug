doctype html
html
	head
		title= title || 'Dimpl'
		meta(charset='utf8')
		meta(name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no')
		meta(http-equiv='X-UA-Compatible' content='IE=edge')
		//- meta(name='viewport' content='width
		link(rel='stylesheet' href='style.css')
		link(rel='stylesheet' href='//stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css')
		block styles
		block scripts
	body
		nav.navbar.navbar-expand-lg.navbar.bg-white.shadow-sm.border-bottom.mb-5
			.container
				a.navbar-brand.text-dark(href='/') Dimpl
				button.navbar-toggler(type='button' data-toggle='collapse' data-target='#topNavbar' aria-controls='topNavbar' aria-expanded='false' aria-label='Toggle navigation')
					span.navbar-toggler-icon
				#topNavbar.collapse.navbar-collapse
					ul.navbar-nav.mr-auto
						li.nav-item.active
							a.nav-link.text-dark(href='/') Home 
						li.nav-item
							a.nav-link.text-dark(href='/profile') Profile 
						li.nav-item
							a.nav-link.text-dark(href='/listing') Listings 
						//- li.nav-item
						//- 	a.nav-link.text-dark(href='/login') Metamask
					
					button.nav-link.text-dark.btn.btn-link.inline(type='button' id='loginMetamask') Metamask 
						sub#connection (Not Connected)
					button.nav-link.text-dark.btn.btn-link.inline(type='button' id='signUp') Sign up 
		.container
			
			block body
			
			block footer		

		script(src='//code.jquery.com/jquery-3.3.1.slim.min.js')
		script(src='//cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js')
		script(src='//stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js')

		//- Login to metamask script:
		script. 
				
				window.userWalletAddress = null;
				const loginButton = document.getElementById('loginMetamask');
				const userWallet = document.getElementById('connection');
				const signUp = document.getElementById('signUp');
				
			

				function toggleButton() {
					if (!window.ethereum) {
						loginButton.innerText = 'MetaMask is not installed'
						loginButton.classList.remove('bg-pink-500', 'text-white')
						loginButton.classList.add('bg-gray-500', 'text-gray-100', 'cursor-not-allowed')
						return false
					}
					loginButton.addEventListener('click', loginWithMetaMask);
					checkConnection();
					//- this code is just to edit the address in the listing page
					if (ethereum.selectedAddress != null){
						const wallet = document.getElementById('from');
						wallet.innerText = ethereum.selectedAddress}
					//- end of the code
				}
				async function loginWithMetaMask() {
					const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' }).catch((e) => {
						console.error(e.message)
						return
					})
					if (!accounts) { return }
					window.userWalletAddress = accounts[accounts.length - 1];
					userWallet.innerText = '(Connected)';
					signUp.style.display = 'none';
					
					
				}
				async function checkConnection(){
					const accounts = await ethereum.request({method: 'eth_accounts'}).catch(console.error)
					window.userWalletAddress = accounts[accounts.length - 1];
					if (window.userWalletAddress != null) {
						userWallet.innerText = '(Connected)';
						signUp.style.display = 'none';
						}
					else {
						userWallet.innerText = '(Not Connected)';
						signUp.style.display = 'block';
					}
				}

				window.addEventListener('DOMContentLoaded', (event) => {
					toggleButton();
				}); 

		//- Payment Script: 
		script.
			const purchaseBtn = document.getElementById('purchase');
			purchaseBtn.addEventListener('click', (event) => {
				if (window.userWalletAddress != null)
					sendTransaction(event);
				else{ 
					window.alert("You are not connected to Metamask");}
				
			})

			async function sendTransaction(event){
				const priceString = document.getElementById('price').innerText;
				const priceInt = priceString.match(/[+-]?\d+(\.\d+)?/g).join("");
				const amount = parseFloat(priceInt) * 1000000000000000000;
				const sendTo = document.getElementById('to').innerText;
				const hexString = amount.toString(16);
				let confirm = false;
				
				let hash = await ethereum.request({
					method: 'eth_sendTransaction',
					params:[
						{
							from: window.userWalletAddress,
							to: sendTo,
							value: '0x' + hexString,
							data: '0x7f7465737432000000000000000000000000000000000000000000000000000000600057', // Optional, but used for defining smart contract creation and interaction.
							
  						
						}
					]
				})
				.then((txHach) => confirm = true)
				.catch((error) => console.error)
				if (confirm){
					window.location.href = '/succeed';
				}
				else{window.alert("The transaction has been rejected");}
            
			}

		


						

